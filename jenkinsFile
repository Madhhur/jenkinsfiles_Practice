@Library('My_Shared') _

pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
               script {
                        def config = [
                            url: 'https://github.com/Madhhur/node_backend-main.git',
                            branch: 'main',
                            credentialId: 'Madhhur'
                        ]
                        
                        gitCheckout(config)

                        sh '''
                            echo "Checkout completed"
                            pwd
                            ls -lrt
                        '''
                    }



            }
        }
        stage('Sonar Code Quality check') {
            steps {
                    script {
                        dir('./backend') {
                            withCredentials([string(credentialsId: 'sonar_token', variable: 'SONAR_TOKEN')]) {
                            sh '''
                            /opt/sonar/latest/bin/sonar-scanner \
                            -Dsonar.projectKey=gearX_product_backend \
                            -Dsonar.sources=. \
                            -Dsonar.host.url=http://www.devopsninja.site:8880/ \
                            -Dsonar.token=$SONAR_TOKEN
                        '''
                 }

                    }
                }
            }
        }
       stage('Quality Gate') {
            steps {
                timeout(time: 5, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }


        stage('trivy scan') {
            steps {
                echo "Scanning the code"
                sh 'echo "Build step executed"'
            }
        }
    }
        post {
                    always {
                        echo "========always========"
                        
                    }
                    success {
                        echo "========pipeline executed successfully ========"
                    }
             }
}
