@Library('My_Shared') _

pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                script {
                    def config = [
                        url: 'https://github.com/Madhhur/testing.git',
                        branch: 'main',
                        credentialId: 'Madhhur'
                    ]
                    gitCheckout(config)

                    sh '''
                        echo "Checkout completed"
                        pwd
                        ls -lrt
                    '''
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('sonar_server') { 
                    sh '/opt/sonar/latest/bin/sonar-scanner -Dsonar.projectKey=gearX_product_backend -Dsonar.sources=.'
                }
            }
        }

        stage('Quality Gate') {
            steps {
                waitForQualityGate abortPipeline: true
                // timeout(time: 2, unit: 'MINUTES') {
                //     waitForQualityGate abortPipeline: true
                }
            }
        }

        stage('Trivy Scan') {
            steps {
                echo "Scanning the code"
                sh 'echo "Build step executed"'
            }
        }
    }

    post {
        always {
            echo "========always========"
        }
        success {
            echo "========pipeline executed successfully ========"
        }
    }
}
